version: '3.8'

x-app: &app
  build:
    context: .
    dockerfile: ./.docker/Dockerfile
    args:
      RUBY_VERSION: '3.0.3'
      BUNDLER_VERSION: '2.2.33'
  environment: &env
    RAILS_ENV: ${RAILS_ENV:-development}
    NODE_ENV: ${NODE_ENV:-development}
  tmpfs:
    - /tmp

x-backend: &backend
  <<: *app
  stdin_open: true
  tty: true
  environment:
    <<: *env
    REDIS_URL: ${REDIS_URL}
    BOOTSNAP_CACHE_DIR: /bundle/bootsnap
    HISTFILE: /app/log/.bash_history
    PSQL_HISTFILE: /app/log/.psql_history
    EDITOR: vi
    MALLOC_ARENA_MAX: 2
    WEB_CONCURRENCY: ${WEB_CONCURRENCY:-1}
  depends_on:
    - postgres
    - redis

x-backend-volumes: &backend-volumes
  volumes:
    - .docker/.psqlrc:/root/.psqlrc:ro
    - .:/app:cached
    - bundle:/bundle
    - rails_cache:/app/tmp/cache
    - node_modules:/app/node_modules
    - packs:/app/public/packs

services:
  rails:
    <<: *backend
    <<: *backend-volumes
    command: >
      sh -c "bundle install &&
      yarn install --check-files &&
      bin/rake db:create &&
      bin/rake db:migrate &&
      rm -f tmp/pids/server.pid &&
      bundle exec rails server -b 0.0.0.0"
    ports:
      - 3000:3000

  runner:
    <<: *backend
    <<: *backend-volumes
    ports:
      - 3002:3002

  sidekiq:
    <<: *backend
    <<: *backend-volumes
    command: bundle exec sidekiq -C config/sidekiq.yml

  redis:
    image: redis:6.2.6-alpine
    volumes:
      - redis:/data
    ports:
      - 6379:6379

  postgres:
    image: postgres:14.1-alpine
    volumes:
      - .docker/.psqlrc:/root/.psqlrc:ro
      - postgres:/var/lib/postgresql/data
      - ./log:/root/log:cached
    env_file:
      - .env
    environment:
      PSQL_HISTFILE: /root/log/.psql_history
    ports:
      - 5432:5432

volumes:
  postgres:
  bundle:
  node_modules:
  rails_cache:
  packs:
  redis:
